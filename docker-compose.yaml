services:
  # Postgres DB
  oltb-db:
    image: postgres:15
    container_name: oltp_db
    ports:
      - "5432:5432"
    volumes:
      - ./docker/db/oltp_schema.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=oltb
      - POSTGRES_PASSWORD=oltb
      - POSTGRES_DB=oltb

  # Superset
  superset:
    build: 
      context: ./docker/superset
      dockerfile: Dockerfile
    container_name: superset 
    ports: 
      - "8080:8088"
    environment:
    - SUPERSET_SECRET_KEY=AWhjVghhJKHvgF
    - ADMIN_USERNAME=admin
    - ADMIN_EMAIL=admin@superset.com
    - ADMIN_PASSWORD=admin
    networks:
      - default
  
  # Spark cluster - 2 nodes
  spark:
    image: bitnami/spark:3.1.2
    container_name: master
    user: root
    hostname: spark
    networks:
      - default
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./docker/spark/conf/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./docker/spark/spark-events:/opt/spark/spark-events
    ports:
      - "8181:8080"
      - "7077:7077"

  spark-worker-1:
    image: bitnami/spark:3.1.2
    container_name: worker-2
    user: root
    networks:
      - default
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./docker/spark/conf/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./docker/spark/spark-events:/opt/spark/spark-events

  spark-worker-2:
    image: bitnami/spark:3.1.2
    container_name: worker-3
    user: root
    networks:
      - default
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./docker/spark/conf/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./docker/spark/spark-events:/opt/spark/spark-events

  # Hadoop cluster 2 nodes
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - ./docker/hadoop-hive/hadoop_storage/namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=hdfs-cluster
    env_file:
      - ./docker/hadoop-hive/hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - ./docker/hadoop-hive/hadoop_storage/datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./docker/hadoop-hive/hadoop.env
  
  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    ports:
      - "8088:8088"
    env_file:
      - ./docker/hadoop-hive/hadoop.env

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./docker/hadoop-hive/hadoop.env
  
  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - ./docker/hadoop-hive/hadoop_storage/hadoop-historyserver:/hadoop/yarn/timeline
    env_file:
      - ./docker/hadoop-hive/hadoop.env

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./docker/hadoop-hive/hadoop.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./docker/hadoop-hive/hadoop.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql
    volumes:
      - ./docker/hadoop-hive/hive_storage/postgresql/data:/var/lib/postgresql/data
    depends_on:
      - datanode

networks:
  default: